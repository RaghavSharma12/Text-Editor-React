{"version":3,"sources":["components/NavBar.js","components/TextBox.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextBox","useState","text","setText","style","color","heading","value","rows","onChange","event","target","backgroundColor","disabled","length","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","split","join","filter","element","Alert","height","alert","role","word","lower","charAt","slice","capitalize","message","defaultProps","aboutText","App","setMode","setAlert","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.96bfb653.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from \"react-router-dom\";\r\n\r\nexport default function NavBar(props) {\r\n  return (\r\n    <div>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n              </li>  */}\r\n               {/* <li className=\"nav-item\"> \r\n                <Link className=\"nav-link\" to=\"/docs\">Docs</Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/contact\">Contact Us</Link>\r\n              </li> */}\r\n\r\n            </ul>\r\n              {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n              <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n            </form>   */}\r\n            <div className={`form-check form-switch text-${props.mode===\"light\"?\"dark\":\"light\"}`}>\r\n              <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.toggleMode} />\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    </div>\r\n  )\r\n}\r\n\r\nNavBar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired\r\n}\r\nNavBar.defaultProps = {\r\n  title: \"raghav's app\",\r\n  aboutText: \"this is my about page\"\r\n}","import React, { useState } from 'react'\r\n\r\nexport default function TextBox(props) {\r\n    const [text, setText] = useState(\"\");\r\n\r\n    function uppercaseClick() {\r\n\r\n        var newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Upper Case !\",\"success\");\r\n    }\r\n    \r\n    \r\n    function lowercaseClick() {\r\n        \r\n        var newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lower Case !\",\"success\");\r\n    }\r\n    \r\n    \r\n    function clearClick() {\r\n        \r\n        var newText = \"\";\r\n        setText(newText);\r\n        props.showAlert(\"Cleared all text !\",\"success\");\r\n    }\r\n    \r\n    \r\n    function copyClick() {\r\n        \r\n        var newText = document.getElementById(\"myBox\");\r\n        newText.select();\r\n        navigator.clipboard.writeText(newText.value);\r\n        document.getSelection().removeAllRanges();\r\n        props.showAlert(\"All items Copied on clipboard !\",\"success\");\r\n        \r\n    }\r\n    \r\n    \r\n    function extaSpacesClick() {\r\n        \r\n        var newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"All Extra spaces removed !\",\"success\");\r\n        \r\n\r\n    }\r\n\r\n\r\n    // toggleClick = () => {\r\n    //     let a = text.toLowerCase()\r\n    //     if (a = text) {\r\n    //         var upText = text.toUpperCase();\r\n    //         setText(upText);\r\n    //     }\r\n    //     else {\r\n    //         let newText = text.tolowerCase();\r\n    //         setText(newText);\r\n    //     }\r\n    // }\r\n    \r\n    function handleOnChange(event) {\r\n\r\n        setText(event.target.value);\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"form-floating\">\r\n                <div className=\"mb-3 my-4\">\r\n                    <label htmlFor=\"myBox\" className=\"form-label\" style={{color: props.mode===\"dark\"?\"white\":\"#042743\"  }} ><h2><b>{props.heading}</b></h2></label>\r\n                    <textarea className=\"form-control\" value={text} id=\"myBox\" rows=\"10\" onChange={handleOnChange} style={{backgroundColor: props.mode===\"dark\"?\"#13466e\":\"white\",color:props.mode===\"dark\"?\"white\":\"#042743\" }}></textarea>\r\n                </div>\r\n                <button disabled={text.length===0} className=\"btn btn-primary my-2 mx-2\" onClick={uppercaseClick} >Change to Upper-Case</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary my-2 mx-2\" onClick={lowercaseClick} >Change to Lower-Case</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary my-2 mx-2\" onClick={clearClick} >Clear</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary my-2 mx-2\" onClick={copyClick} >Copy Text</button>\r\n                <button disabled={text.length===0} className=\"btn btn-primary my-2 mx-2\" onClick={extaSpacesClick} >Remove Extra Spaces</button>\r\n                {/* <button className=\"btn btn-primary my-2 mx-2\" onClick={toggleClick} >Toggle-Case</button> */}\r\n            </div>\r\n            <div className=\"container my-4\" style={{color: props.mode===\"dark\"?\"white\":\"#042743\"  }}>\r\n                <h3>Text Summary</h3>\r\n                <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n                <p>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes will take to read this</p>\r\n                <h3>Preview</h3>\r\n                <p>{text.length>0?text:\"Nothing to Preview :(\"}</p>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{height:\"50px\"}}>\r\n        {props.alert && <div>\r\n            <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong> : {props.alert.message}            </div>\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport NavBar from './components/NavBar';\nimport TextBox from './components/TextBox';\n// import About from './components/About';\nimport Alert from './components/Alert';\nimport React, { useState } from 'react'\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\n// import About from './components/About';\n\nfunction App() {\n\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      message: message,\n      type: type,\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n\n  }\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark Mode has been Enabled\", \"success\");\n      document.title = \"Text-Editor-Dark-Home\"\n    }\n    else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode has been Enabled\", \"success\");\n      document.title = \"Text-Editor-Home\"\n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n        <NavBar title=\"Text-Editor\" aboutText=\"About Text-Editor \" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <div className=\"container\">\n          {/* <Switch> */}\n            {/* <Route exact path=\"/about\"> */}\n              {/* <About mode={mode} /> */}\n            {/* </Route> */}\n            {/* <Route exact path=\"/\"> */}\n              <TextBox heading=\"Enter the text to Analyze\" mode={mode} showAlert={showAlert} />\n            {/* </Route> */}\n          {/* </Switch> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}